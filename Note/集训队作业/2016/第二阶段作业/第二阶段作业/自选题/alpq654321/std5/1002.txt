#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#include <string>
#include <cstring>
#include <map>
#include <set>
#include <vector>
using namespace std;
//void add(int a,int b,int c) {e[a]=c;next[a]=head[b];head[b]=a;}
const int MOD=1000000007;
int quick(int a,int b)
{
    int ans=1;
    while (b) {if (b&1) ans=1ll*ans*a%MOD; a=1ll*a*a%MOD; b>>=1;}
    return ans;
}
struct node {int x,y;} t[100005],a[200005];
int n,i,T,sum,cnt;
long long ANS,pw[100005],bit[100005];
int cmp(node i,node j) {return i.x<j.x;}
int main()
{
    scanf("%d",&T);
    bit[0]=1;
    for (i=1; i<=100000; i++) bit[i]=bit[i-1]*2%MOD;
    while (T--)
    {
        cnt=0;
        scanf("%d",&n);
        for (i=1; i<=n; i++)
        {
            scanf("%d%d",&t[i].x,&t[i].y);
            a[++cnt].x=t[i].x; a[cnt].y=1; a[++cnt].x=t[i].y; a[cnt].y=-1;
        }
        pw[1]=bit[n-1];
        for (i=2; i<=n; i++) pw[i]=(pw[i-1]+bit[n-i])%MOD;
        sort(a+1,a+cnt+1,cmp); sum=0;
        for (i=1; i<cnt; i++)
        {
            sum+=a[i].y;
            ANS=(ANS+pw[sum]*(a[i+1].x-a[i].x))%MOD;
        }
        printf("%d\n",ANS);
        ANS=0;
    }
    return 0;
}