\documentclass{noiassignment}
\begin{document}

%% 解题报告开始

\title{有趣的游戏 解题报告}
\author{浙江省绍兴市第一中学 洪华敦}

\maketitle

\section{试题来源}
https://www.51nod.com/onlineJudge/questionCode.html\#!problemId=1599
\section{试题大意}
有$n$个人在玩游戏，游戏的规则是这样的:

$(1)$随机选择一个未出局的人$x$

$(2)$$x$对剩下的未出局的人都做一次攻击，一个人受到攻击后，有$(1-p)$的概率受伤且出局

$(3)$$x$出局

重复以上步骤直到所有人出局

现在$ZYB$想知道，一个人不受伤出局，且一共受到$k$次攻击的概率是多少

为了避免精度误差，你需要输出答案在模$1e9+7$域下的值

一共有$Q$次询问，每次询问的$n$一样，$1\leq n\leq 10^6$，$1\leq \sum{k}\leq 10^6$

保证$p^0,p^1...p^n$互不相等
\section{算法介绍}
\subsection{暴力动态规划}
考虑动态规划的做法，暴力做法是$f[i][j]$记剩下$i$个人，有$j$次攻击的概率，转移时需要枚举多少人受伤出局，时间复杂度是$O(n^3)$
\subsection{较优的动态规划}
本题有一个十分重要的性质：每个人本质上是相同的

之前的动态规划之所以是$n^3$的，是因为这个序列的数量变化不稳定，如果每次变化稳定，转移就可以变成$O(1)$的了

我们假定第二步的受伤不出局，然后在第一步选人时，如果选的受伤的就直接执行第三步，这样显然概率还是等价的

就像一堆$0$，一堆$1$，你选到第一个$0$是你想要的的概率显然还是$\frac{1}{|S_0|}$

那么就可以设计出新的动态规划方程$f[i][j]$表示还剩下$i$个人，前面一共$j$次攻击

新加入一个人时，考虑他在$j$次攻击下存活的概率即可

即$f[i][j]=f[i-1][j]*(1-p^j)+f[i-1][j-1]*p^j$

最后答案就是$\frac{\sum_{i=0}^{n-1}f[i][k]*p^k}{n}$

这样时间复杂度是$O(n^2)$的
\subsection{多项式}
考虑用多项式优化这个$Dp$

令$g[i][j]=f[i][j]*p^j$

则有$g[i][j]=g[i-1][j-1]*p^j+g[i-1][j]*(1-p^j)$

令多项式$h_i(x)$为对于$0\leq j\leq n$满足$[x^j]h_i(x)=g[j][i]$的多项式

则有$f_i(x)=f_$
%% 解题报告结束

\end{document}



