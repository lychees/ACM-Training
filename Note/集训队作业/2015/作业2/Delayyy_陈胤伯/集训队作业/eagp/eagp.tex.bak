\documentclass{noiassignment}
\usepackage{CJKspace}

\begin{document}

\title{EAGP 解题报告}
\author{长郡中学~~陈胤伯}

\maketitle

\section{试题来源}

http://www.codechef.com/IOPC2014/problems/IOPC14E

\section{试题大意}

一棵 $n$ 个点的树，每个点有个权值 $p_i$（初始时为 $0$）。

先执行 $U$ 次修改操作，再进行 $Q$ 次询问操作。

每次修改操作，先选中一条从 $S_i$ 到 $T_i$ 的链，然后给定一个参数 $X$ 。设链上的点依次为 $v_{1\sim k}$，则给 $p_{v_i}$ 加上 $iXR^i$。其中 $R$ 是一个一开始给定的参数，即对于每个询问 $X$ 可能不同但 $R$ 相同。

每次询问操作，是询问一条从 $S_i$ 到 $T_i$ 的链上的权值和模 $100711433$。

$1\leq n,U,Q\leq 10^5$，$1\leq X,R\leq 10^9$。

\section{算法介绍}

\subsection{分成两步}

由于所有询问在修改之后，如果我们能求出所有修改后每个点的权值最终成了啥，剩下的就是一个经典的链上求和问题了。

对于树上链求和问题，我们可以记录每个点到根的权值和 $S_i$，对于链询问 $u,v$，$S_u+S_v-2S_{\mathrm{lca}(u,v)}+p_{\mathrm{lca}(u,v)}$ 即为答案，$\mathrm{lca}(u,v)$ 可以通过倍增预处理后每次 $O(\log n)$ 求得（经典问题不再展开描述）。

那么我们下面来考虑怎么搞出在所有修改后每个点的权值。

\subsection{考虑一次修改}

首先，对于一次修改，我们以两端点的 $\mathrm{lca}$ 为界，把修改链拆成两段祖先链。每一条形如 $+lXR^l,+(l+1)XR^{l+1},...,+rXR^r$ ，一边是深到浅的，一边是从浅到深的。我们先讨论从浅到深的。

\includegraphics{p1.png}

由于加的值缺乏统一性，我们很难直接维护。

但注意到一个点加的值和深度有一定关联，我们考虑维护这样两个量 $A_i,B_i$，对于点 $i$ 定义 $p_i=A_i*(deep_i*R^{deep_i})+B_i*(R^{deep_i})$，我们把对链上 $p$ 的修改，转化成对链上 $A,B$ 的修改。

设形如上图的修改的最上面点的权值 $p_u+=lXR^l$ ，我们转化为 $A_u+=XR^{l-d}$，$B_u+=(l-d)XR^{l-d}$，其中 $d=deep_u$，可以发现这样转化后修改是等价的。

进一步地，我们发现，链上每个点的 $A$ 都加上了同一个值，$B$ 也都加上了同一个值。

这样，一次奇怪的对 $p$ 的链修改转化成了对 $A,B$ 的链上加同一个数。

\subsection{快速进行树上链加值}

设 $A'_u=A_u-\sum_{v \in son(u)}A_v$，那么注意到对 $A$ 的链上加 $k$ 只会影响修改链最顶端和最低端的 $A'$，这样可以做到 $O(1)$ 的对 $A'$ 的修改。

全部修改完后，再通过 $A'$ 自底而上递推出 $A$ 即可。

上面讨论的是如何处理从浅到深的情况，从深到浅同理，这里不加赘述。

求出最终的 $A,B$ 也就求出了最终的 $p$。然后就可以处理询问了。

时间复杂度 $O(n\log n+(U+Q)\log n)$。

\end{document}
