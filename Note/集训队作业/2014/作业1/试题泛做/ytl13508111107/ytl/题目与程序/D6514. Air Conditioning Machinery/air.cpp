#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#define N 25
using namespace std;

const int xo[6][8][5]={
{{0,0,1,2,3},{0,0,-1,-2,-3},{0,0,0,0,0},{0,0,0,0,0},{0,0,0,1,2},{0,0,0,-1,-2},{0,0,0,0,0},{0,0,0,0,0}},
{{0,0,1,2,3},{0,0,-1,-2,-3},{0,0,0,0,0},{0,0,0,0,0},{0,0,0,1,2},{0,0,0,-1,-2},{0,0,0,0,0},{0,0,0,0,0}},
{{0,1,1,1,1},{0,1,1,1,1},{0,1,1,1,1},{0,1,1,1,1},{0,1,2,2,2},{0,1,2,2,2},{0,1,2,2,2},{0,1,2,2,2}},
{{0,-1,-1,-1,-1},{0,-1,-1,-1,-1},{0,-1,-1,-1,-1},{0,-1,-1,-1,-1},{0,-1,-2,-2,-2},{0,-1,-2,-2,-2},{0,-1,-2,-2,-2},{0,-1,-2,-2,-2}},
{{0,0,1,2,3},{0,0,-1,-2,-3},{0,0,0,0,0},{0,0,0,0,0},{0,0,0,1,2},{0,0,0,-1,-2},{0,0,0,0,0},{0,0,0,0,0}},
{{0,0,1,2,3},{0,0,-1,-2,-3},{0,0,0,0,0},{0,0,0,0,0},{0,0,0,1,2},{0,0,0,-1,-2},{0,0,0,0,0},{0,0,0,0,0}}};
const int yo[6][8][5]={
{{0,1,1,1,1},{0,1,1,1,1},{0,1,1,1,1},{0,1,1,1,1},{0,1,2,2,2},{0,1,2,2,2},{0,1,2,2,2},{0,1,2,2,2}},
{{0,-1,-1,-1,-1},{0,-1,-1,-1,-1},{0,-1,-1,-1,-1},{0,-1,-1,-1,-1},{0,-1,-2,-2,-2},{0,-1,-2,-2,-2},{0,-1,-2,-2,-2},{0,-1,-2,-2,-2}},
{{0,0,1,2,3},{0,0,-1,-2,-3},{0,0,0,0,0},{0,0,0,0,0},{0,0,0,1,2},{0,0,0,-1,-2},{0,0,0,0,0},{0,0,0,0,0}},
{{0,0,1,2,3},{0,0,-1,-2,-3},{0,0,0,0,0},{0,0,0,0,0},{0,0,0,1,2},{0,0,0,-1,-2},{0,0,0,0,0},{0,0,0,0,0}},
{{0,0,0,0,0},{0,0,0,0,0},{0,0,1,2,3},{0,0,-1,-2,-3},{0,0,0,0,0},{0,0,0,0,0},{0,0,0,1,2},{0,0,0,-1,-2}},
{{0,0,0,0,0},{0,0,0,0,0},{0,0,1,2,3},{0,0,-1,-2,-3},{0,0,0,0,0},{0,0,0,0,0},{0,0,0,1,2},{0,0,0,-1,-2}}};
const int zo[6][8][5]={
{{0,0,0,0,0},{0,0,0,0,0},{0,0,1,2,3},{0,0,-1,-2,-3},{0,0,0,0,0},{0,0,0,0,0},{0,0,0,1,2},{0,0,0,-1,-2}},
{{0,0,0,0,0},{0,0,0,0,0},{0,0,1,2,3},{0,0,-1,-2,-3},{0,0,0,0,0},{0,0,0,0,0},{0,0,0,1,2},{0,0,0,-1,-2}},
{{0,0,0,0,0},{0,0,0,0,0},{0,0,1,2,3},{0,0,-1,-2,-3},{0,0,0,0,0},{0,0,0,0,0},{0,0,0,1,2},{0,0,0,-1,-2}},
{{0,0,0,0,0},{0,0,0,0,0},{0,0,1,2,3},{0,0,-1,-2,-3},{0,0,0,0,0},{0,0,0,0,0},{0,0,0,1,2},{0,0,0,-1,-2}},
{{0,-1,-1,-1,-1},{0,-1,-1,-1,-1},{0,-1,-1,-1,-1},{0,-1,-1,-1,-1},{0,-1,-2,-2,-2},{0,-1,-2,-2,-2},{0,-1,-2,-2,-2},{0,-1,-2,-2,-2}},
{{0,1,1,1,1},{0,1,1,1,1},{0,1,1,1,1},{0,1,1,1,1},{0,1,2,2,2},{0,1,2,2,2},{0,1,2,2,2},{0,1,2,2,2}}};
const int go[6][8]={
{2,3,5,4,2,3,5,4},
{2,3,5,4,2,3,5,4},
{0,1,5,4,0,1,5,4},
{0,1,5,4,0,1,5,4},
{2,3,0,1,2,3,0,1},
{2,3,0,1,2,3,0,1}};

int Sx,Sy,Sz,Tx,Ty,Tz,Xmax,Ymax,Zmax,ans,Sdir,Tdir;
int use[N][N][N];
string Sd,Td;

bool can(int x,int y,int z,int dir,int k){
	for (int i=0;i<4;i++){
		int nx=x+xo[dir][k][i];
		int ny=y+yo[dir][k][i];
		int nz=z+zo[dir][k][i];
		if (use[nx][ny][nz]) return false;
	}
	return true;	
}
void make(int x,int y,int z,int dir,int k,int o){
	for (int i=0;i<4;i++){
		int nx=x+xo[dir][k][i];
		int ny=y+yo[dir][k][i];
		int nz=z+zo[dir][k][i];
		use[nx][ny][nz]=o;
	}
}

void search(int x,int y,int z,int dir,int tot){
	if (tot>=ans) return;
	for (int i=0;i<8;i++) 
		if (can(x,y,z,dir,i)){
			make(x,y,z,dir,i,1);
			int nx=x+xo[dir][i][3];
			int ny=y+yo[dir][i][3];
			int nz=z+zo[dir][i][3];
			if (nx==Tx&&ny==Ty&&nz==Tz){
				if (go[dir][i]==Tdir){
					ans=min(ans,tot);
				}
			}else{
				search(x+xo[dir][i][4],y+yo[dir][i][4],z+zo[dir][i][4],go[dir][i],tot+1);
			}
			make(x,y,z,dir,i,0);
		}	
}
void init(){
	for (int i=0;i<=Xmax+1;i++)
		for (int j=0;j<=Ymax+1;j++)
			for (int k=0;k<=Zmax+1;k++)
				use[i][j][k]=1;
	for (int i=1;i<=Xmax;i++)
		for (int j=1;j<=Ymax;j++)
			for (int k=1;k<=Zmax;k++)
				use[i][j][k]=0;
	ans=7;
}
int trans(const string &a){
	if (a=="+y") return 0;
	if (a=="-y") return 1;
	if (a=="+x") return 2;
	if (a=="-x") return 3;
	if (a=="-z") return 4;
	if (a=="+z") return 5;
	return -1;	
}
int main(){
	freopen("air.in","r",stdin);
	freopen("air.out","w",stdout);
	int cas=0;
	while (scanf("%d",&Xmax)!=EOF&&Xmax){
		scanf("%d%d",&Ymax,&Zmax);
		init();
		scanf("%d%d%d",&Sx,&Sy,&Sz);cin>>Sd;Sdir=trans(Sd);
		scanf("%d%d%d",&Tx,&Ty,&Tz);cin>>Td;Tdir=trans(Td);
		search(Sx,Sy,Sz,Sdir,1);
		if (ans==7) printf("Case %d: Impossible\n",++cas);
		else printf("Case %d: %d\n",++cas,ans);
	}
	return 0;
}
